!function(window){window.App=window.App||{},App.Utils={isArray:function(obj){return"[object Array]"===Object.prototype.toString.call(obj)},each:function(obj,callback){var util=App.Utils;if(util.isArray(obj))for(var i=0,len=obj.length;len>i;i++)callback&&callback(i,obj[i]);else for(var key in obj)callback&&callback(key,obj[key])},clone:function(obj){var util=App.Utils,out=null;return util.isArray(obj)?(out=[],util.each(obj,function(i,e){out.push(e)})):(out={},util.each(obj,function(i,e){out[i]=e})),out},merge:function(){for(var args=arguments,util=App.Utils,len=args.length,temp={},i=len-1;i>0;i--){if(util.isArray(args[i-1])){temp={};for(var j=0;j<args[i-1].length;j++)temp[j]=args[i-1][j];args[i-1]=temp}if(util.isArray(args[i]))for(var j=0;j<args[i].length;j++)args[i-1][j]=args[i][j];else for(var j in args[i])args[i-1][j]=args[i][j]}return args[0]},trim:function(str){var rBlank=/(^\s+)|(\s+$)/g;return str.replace(rBlank,"")},hasClass:function(node,cls){var clsn=node.className,rCls=new RegExp("(^|\\s+)"+cls+"(\\s+|$)","g");return rCls.test(clsn)},addClass:function(node,cls){var util=App.Utils,clsn=node.className;util.hasClass(node,cls)||(node.className=clsn+" "+cls)},removeClass:function(node,cls){var util=App.Utils,clsn=node.className,rCls=new RegExp("(^|\\s+)"+cls+"(\\s+|$)","g");util.hasClass(node,cls)&&(node.className=util.trim(clsn.replace(rCls,"$1$2")))}}}(window);